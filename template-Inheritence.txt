### **Django Template Inheritance & UI Structure for a Modern Project**  

Using template inheritance in Django helps create reusable layouts, making UI design modular and efficient. Below is a **structured folder layout** and **code examples** for a modern Django UI setup.  

---

## **1️⃣ Folder Structure**
```
src/
│── cfehome/
│   │── views.py
│   │── urls.py
│   │── settings.py
│
│── templates/
│   │── base.html                # Main parent template
│   │── includes/
│   │   │── navbar.html          # Navigation bar component
│   │   │── footer.html          # Footer component
│   │── pages/
│   │   │── home.html            # Homepage (inherits base.html)
│   │   │── about.html           # About Page (inherits base.html)
│   │   │── contact.html         # Contact Page (inherits base.html)
│
│── static/
│   │── css/
│   │   │── styles.css           # Global CSS styles
│   │── js/
│   │   │── scripts.js           # JavaScript functions
│   │── images/
│       │── logo.png             # Example logo image
```

---

## **2️⃣ Base Template (`base.html`)**
This is the **parent** template, containing the core structure, which other templates will extend.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}My Django App{% endblock %}</title>
    <link rel="stylesheet" href="{% static 'css/styles.css' %}">
</head>
<body>
    <!-- Navbar -->
    {% include 'includes/navbar.html' %}

    <main>
        {% block content %}{% endblock %}
    </main>

    <!-- Footer -->
    {% include 'includes/footer.html' %}

    <script src="{% static 'js/scripts.js' %}"></script>
</body>
</html>
```

---

## **3️⃣ Navbar (`includes/navbar.html`)**
This component is included in `base.html` to keep navigation **consistent** across all pages.

```html
<nav>
    <ul>
        <li><a href="{% url 'home' %}">Home</a></li>
        <li><a href="{% url 'about' %}">About</a></li>
        <li><a href="{% url 'contact' %}">Contact</a></li>
    </ul>
</nav>
```

---

## **4️⃣ Footer (`includes/footer.html`)**
Another reusable component for site-wide consistency.

```html
<footer>
    <p>&copy; 2025 My Django App | All Rights Reserved.</p>
</footer>
```

---

## **5️⃣ Home Page (`pages/home.html`)**
This **child** template extends `base.html` and fills in the `{% block content %}` section.

```html
{% extends 'base.html' %}

{% block title %}Home - My Django App{% endblock %}

{% block content %}
    <section>
        <h1>Welcome to My Django App</h1>
        <p>This is the home page with dynamic content.</p>
    </section>
{% endblock %}
```

---

## **6️⃣ About Page (`pages/about.html`)**
Another child template with different content.

```html
{% extends 'base.html' %}

{% block title %}About Us{% endblock %}

{% block content %}
    <section>
        <h1>About Our App</h1>
        <p>Learn more about our Django project.</p>
    </section>
{% endblock %}
```

---

## **7️⃣ Contact Page (`pages/contact.html`)**
A form-based page.

```html
{% extends 'base.html' %}

{% block title %}Contact Us{% endblock %}

{% block content %}
    <section>
        <h1>Contact Us</h1>
        <form>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
            <button type="submit">Send</button>
        </form>
    </section>
{% endblock %}
```

---

## **8️⃣ Views (`views.py`)**
```python
from django.shortcuts import render

def home_page_view(request):
    return render(request, 'pages/home.html')

def about_page_view(request):
    return render(request, 'pages/about.html')

def contact_page_view(request):
    return render(request, 'pages/contact.html')
```

---

## **9️⃣ URLs (`urls.py`)**
```python
from django.urls import path
from cfehome.views import home_page_view, about_page_view, contact_page_view

urlpatterns = [
    path('', home_page_view, name='home'),
    path('about/', about_page_view, name='about'),
    path('contact/', contact_page_view, name='contact'),
]
```

---

## **🔟 CSS Styling (`static/css/styles.css`)**
```css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    text-align: center;
}

nav ul {
    list-style: none;
    background: #333;
    padding: 10px;
}

nav ul li {
    display: inline;
    margin: 0 15px;
}

nav ul li a {
    color: white;
    text-decoration: none;
}

footer {
    margin-top: 20px;
    padding: 10px;
    background: #333;
    color: white;
}
```

---

## **🎯 Key Benefits of This Setup**
✅ **Reusability:** Navbar and footer are reusable components.  
✅ **Scalability:** Easy to add new pages by extending `base.html`.  
✅ **Maintainability:** Changes to layout are done in `base.html`, affecting all pages.  
✅ **Performance:** Using `{% include %}` and `{% block %}` keeps things efficient.  

---

## **🚀 Next Steps**
- Add a **Dark Mode** toggle with JavaScript.  
- Create a **User Authentication System** (`login.html`, `register.html`).  
- Use **Bootstrap or Tailwind CSS** for a modern UI.  

Let me know if you need help implementing advanced features! 🚀🔥